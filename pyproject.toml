[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions"]
build-backend = "hatchling.build"

[project]
name = "fMRIPost-tedana"
description = "Run tedana in a BIDS App."
readme = "long_description.rst"
authors = [{name = "The ME-ICA Developers", email = ""}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
license = {file = "LICENSE"}
requires-python = ">=3.8"
dependencies = [
    "looseversion",
    "nibabel >= 4.0.1",
    "nipype >= 1.8.5",
    "nitime",
    "niworkflows @ git+https://github.com/nipreps/niworkflows.git@master",
    "numpy >= 1.22",
    "packaging",
    "pandas",
    "psutil >= 5.4",
    "pybids >= 0.15.2",
    "pydra",
    "requests",
    "tedana >= 0.0.9",
    "templateflow >= 23.0.0",
    "toml",
    "codecarbon",
    "APScheduler",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/ME-ICA/tedana"
Documentation = "https://tedana.readthedocs.io"
Paper = ""
"Docker Images" = "https://hub.docker.com/r/me-ica/fmripost_tedana/tags/"

[project.optional-dependencies]
doc = [
    "pydot >= 1.2.3",
    "sphinx >= 5",
    "sphinx-argparse",
    "sphinx_rtd_theme>=0.5.2",
]
dev = [
    "black ~= 22.3.0",
    "pre-commit",
    "isort ~= 5.10.1",
    "flake8-pyproject",
]
duecredit = ["duecredit"]
resmon = []
container = [
    "fmripost_tedana[telemetry]",
    # templateflow extras
    "datalad",
    "datalad-osf",
]
telemetry = [
    "migas >= 0.3.0",
    "sentry-sdk >= 1.3",
]
test = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-env",
]
maint = [
    "fuzzywuzzy",
    "python-Levenshtein",
]
# Aliases
docs = ["fmripost_tedana[doc]"]
tests = ["fmripost_tedana[test]"]
all = ["fmripost_tedana[doc,maint,telemetry,test]"]

[project.scripts]
fmripost_tedana = "fmripost_tedana.cli.run:main"

#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["fmripost_tedana"]
exclude = [
    "fmripost_tedana/data/tests/work",  # Large test data directory
]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "fmripost_tedana/_version.py"

#
# Developer tool configurations
#

[tool.black]
line-length = 99
target-version = ['py39']
skip-string-normalization = true

[tool.isort]
profile = 'black'

[tool.flake8]
max-line-length = "99"
doctests = "False"
exclude = "*build/"
ignore = ["W503", "E203"]
per-file-ignores = [
    "**/__init__.py : F401",
    "docs/conf.py : E265",
]

[tool.pytest.ini_options]
norecursedirs = [".git"]
addopts = "-svx --doctest-modules"
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]
junit_family = "xunit2"
